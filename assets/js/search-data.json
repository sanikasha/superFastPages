{
  
    
        "post0": {
            "title": "College Board Progress Checks",
            "content": "1.1 Collaboration: 3/3 . A company that develops educational software wants to assemble a collaborative team of developers from a variety of professional and cultural backgrounds. Which of the following is NOT considered a benefit of assembling such a team? . Collaboration that includes diverse backgrounds and perspectives can eliminate the need for software testing. . Three students in different locations are collaborating on the development of an application. Which of the following strategies is LEAST likely to facilitate collaboration among the students? . Having all three students write code independently and then having one student combine the code into a program . A company that develops mobile applications wants to involve users in the software development process. Which of the following best explains the benefit in having users participate? . Users can provide feedback that can be used to incorporate a variety of perspectives into the software. . 1.2 Program Design and Development Quiz: 1/3 *was a little confused, but later realized that I was supposed to watch the CB video detailing the information in the quiz . . Q1 . In the following procedure, the parameter max is a positive integer. . PROCEDURE printNums(max) { count ← 1 REPEAT UNTIL(count &gt; max) { DISPLAY(count) count ← count + 2 } } . Which of the following is the most appropriate documentation to appear with the printNums procedure? . Prints all positive odd integers that are less than or equal to max. . Q2 . In the following procedure, the parameters x and y are integers. . . Which of the following is the most appropriate documentation to appear with the calculate procedure? . Displays the value of (x + y) / x. The value of the parameter x must not be 0. . Q3 . In the following procedure, the parameter numList is a list of numbers and the parameters j and k are integers. . PROCEDURE swapListElements(numList, j, k) { newList ← numList newListj ← numListk newListk ← numListj RETURN(newList) } . Which of the following is the most appropriate documentation to appear with the swapListElements procedure? . Interchanges the values of the parameters j and k. The value of j must be between 0 and the value of k, inclusive. . 1.3 Program Design and Development Quiz: 4/6 . Q1 Consider the following code segment. . . Which of the following best describes the behavior of the code segment? . The code segment displays the value of 2(5^3) by initializing result to 2 and then multiplying result by 5 a total of three times. . Q2 In the following procedure, assume that the parameter x is an integer. . . Which of the following best describes the behavior of the procedure? . It displays true if x is negative and displays nothing otherwise. . Q3 DineOutHelper is a mobile application that people can use to select a restaurant for a group meal. Each user creates a profile with a unique username and a list of food allergies or dietary restrictions. Each user can then build a contact list of other users of the app. . A user who is organizing a meal with a group selects all the members of the group from the user’s contact list. The application then recommends one or more nearby restaurants based on whether the restaurant can accommodate all of the group members’ allergies and dietary restrictions. . Suppose that Alejandra is using DineOutHelper to organize a meal with Brandon and Cynthia. . Which of the following data are needed for DineOutHelper to recommend a restaurant for the group? . I. Each group member’s list of food allergies or dietary restrictions II. Alejandra’s geographic location III. The usernames of the people on Brandon and Cynthia’s contact lists . I and II only . Q4 DineOutHelper is a mobile application that people can use to select a restaurant for a group meal. Each user creates a profile with a unique username and a list of food allergies or dietary restrictions. Each user can then build a contact list of other users of the app. . A user who is organizing a meal with a group selects all the members of the group from the user’s contact list. The application then recommends one or more nearby restaurants based on whether the restaurant can accommodate all of the group members’ allergies and dietary restrictions. . Suppose that Alejandra is using DineOutHelper to organize a meal with Brandon and Cynthia. . Which of the following data is not provided by Alejandra but is necessary for DineOutHelper to recommend a restaurant for the group? . I. Brandon’s contact list II. Information about which restaurants Brandon and Cynthia have visited in the past III. Information about which food allergies and dietary restrictions can be accommodated at different restaurants near Alejandra . II and III only . Q5 A student wrote the following code segment, which displays true if the list myList contains any duplicate values and displays false otherwise. . . The code segment compares pairs of list elements, setting containsDuplicates to true if any two elements are found to be equal in value. Which of the following best describes the behavior of how pairs of elements are compared? . The code segment iterates through myList, comparing each element to all other elements in the list. . Q6 A student is creating an application that allows customers to order food for delivery from a local restaurant. Which of the following is LEAST likely to be an input provided by a customer using the application? . The cost of a food item currently available for order .",
            "url": "https://sanikasha.github.io/superFastPages/week%206/2022/09/30/CB-Prog.html",
            "relUrl": "/week%206/2022/09/30/CB-Prog.html",
            "date": " • Sep 30, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "College Board Learning Target Notes",
            "content": "1.3 Program Design and Development Quiz Notes . Video 1 Video 2 Video 3 .",
            "url": "https://sanikasha.github.io/superFastPages/week%206/2022/09/30/CB-Notes.html",
            "relUrl": "/week%206/2022/09/30/CB-Notes.html",
            "date": " • Sep 30, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Attempted JavaScript Calc Analysis",
            "content": "function display(val) { document.getElementById(&quot;textval&quot;).value += val } function evaluate() { let x = document.getElementById(&quot;textval&quot;).value let y = eval(x) document.getElementById(&quot;textval&quot;).value = y } function clr() { document.getElementById(&quot;textval&quot;).value = &quot;&quot; } // defining our calculator function function myCalc() { var style1 = ( &quot;input[type=&#39;button&#39;]&quot; + &quot;{border-radius: 10px;background-color: blue;color: white; border-color: #pink; width: 100%;}&quot; ); var style2=( &quot;input[type=&#39;text&#39;]&quot; + &quot;{border-radius: 10px;text-align: right;background-color: yellow;color: white;border-color: white;width: 100%}&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // making a header body += &quot;&lt;p&gt;Calculator&lt;/p&gt;&quot;; body += &quot;&lt;div class=title&gt;A JS Calculator&lt;/div&gt;&quot;; body += &quot;&lt;table border=&#39;1&#39;&gt;&quot;; body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;td&gt;&lt;input type=&#39;button&#39; value=&#39;c&#39; onclick=&#39;clr()&#39; /&gt; &lt;/td&gt;&quot;; body += &quot;&lt;td colspan=&#39;3&#39;&gt;&lt;input type=&#39;text&#39; id=&#39;textval&#39; /&gt;&lt;/td&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;td&gt;&lt;input type=&#39;button&#39; value=&#39;+&#39; onclick=&#39;display(&#39;+&#39;)&#39; /&gt; &lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&lt;input type=&#39;button&#39; value=&#39;1&#39; onclick=&#39;display(&#39;1&#39;)&#39; /&gt; &lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&lt;input type=&#39;button&#39; value=&#39;2&#39; onclick=&#39;display(&#39;2&#39;)&#39; /&gt; &lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&lt;input type=&#39;button&#39; value=&#39;3&#39; onclick=&#39;display(&#39;3&#39;)&#39; /&gt; &lt;/td&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;td&gt;&lt;input type=&#39;button&#39; value=&#39;-&#39; onclick=&#39;display(&#39;-&#39;)&#39; /&gt; &lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&lt;input type=&#39;button&#39; value=&#39;4&#39; onclick=&#39;display(&#39;4&#39;)&#39; /&gt; &lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&lt;input type=&#39;button&#39; value=&#39;5&#39; onclick=&#39;display(&#39;5&#39;)&#39; /&gt; &lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&lt;input type=&#39;button&#39; value=&#39;6&#39; onclick=&#39;display(&#39;6&#39;)&#39; /&gt; &lt;/td&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;td&gt;&lt;input type=&#39;button&#39; value=&#39;*&#39; onclick=&#39;display(&#39;*&#39;)&#39; /&gt; &lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&lt;input type=&#39;button&#39; value=&#39;7&#39; onclick=&#39;display(&#39;7&#39;)&#39; /&gt; &lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&lt;input type=&#39;button&#39; value=&#39;8&#39; onclick=&#39;display(&#39;8&#39;)&#39; /&gt; &lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&lt;input type=&#39;button&#39; value=&#39;9&#39; onclick=&#39;display(&#39;9&#39;)&#39; /&gt; &lt;/td&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;td&gt;&lt;input type=&#39;button&#39; value=&#39;/&#39; onclick=&#39;display(&#39;/&#39;)&#39; /&gt; &lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&lt;input type=&#39;button&#39; value=&#39;.&#39; onclick=&#39;display(&#39;.&#39;)&#39; /&gt; &lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&lt;input type=&#39;button&#39; value=&#39;0&#39; onclick=&#39;display(&#39;0&#39;)&#39; /&gt; &lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&lt;input type=&#39;button&#39; value=&#39;=&#39; onclick=&#39;evaluate()&#39; /&gt; &lt;/td&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; body += &quot;&lt;/table&gt;&quot;; // Build and HTML fragment of div, table, table body return ( &quot;&lt;div&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; $$.html(myCalc()); . &lt;divCalculator . A JS Calculator | | . &lt;input type=&#39;button&#39; value=&#39;+&#39; onclick=&#39;display(&#39;+&#39;)&#39; /&gt; | &lt;input type=&#39;button&#39; value=&#39;1&#39; onclick=&#39;display(&#39;1&#39;)&#39; /&gt; | &lt;input type=&#39;button&#39; value=&#39;2&#39; onclick=&#39;display(&#39;2&#39;)&#39; /&gt; | &lt;input type=&#39;button&#39; value=&#39;3&#39; onclick=&#39;display(&#39;3&#39;)&#39; /&gt; | . &lt;input type=&#39;button&#39; value=&#39;-&#39; onclick=&#39;display(&#39;-&#39;)&#39; /&gt; | &lt;input type=&#39;button&#39; value=&#39;4&#39; onclick=&#39;display(&#39;4&#39;)&#39; /&gt; | &lt;input type=&#39;button&#39; value=&#39;5&#39; onclick=&#39;display(&#39;5&#39;)&#39; /&gt; | &lt;input type=&#39;button&#39; value=&#39;6&#39; onclick=&#39;display(&#39;6&#39;)&#39; /&gt; | . &lt;input type=&#39;button&#39; value=&#39;*&#39; onclick=&#39;display(&#39;*&#39;)&#39; /&gt; | &lt;input type=&#39;button&#39; value=&#39;7&#39; onclick=&#39;display(&#39;7&#39;)&#39; /&gt; | &lt;input type=&#39;button&#39; value=&#39;8&#39; onclick=&#39;display(&#39;8&#39;)&#39; /&gt; | &lt;input type=&#39;button&#39; value=&#39;9&#39; onclick=&#39;display(&#39;9&#39;)&#39; /&gt; | . &lt;input type=&#39;button&#39; value=&#39;/&#39; onclick=&#39;display(&#39;/&#39;)&#39; /&gt; | &lt;input type=&#39;button&#39; value=&#39;.&#39; onclick=&#39;display(&#39;.&#39;)&#39; /&gt; | &lt;input type=&#39;button&#39; value=&#39;0&#39; onclick=&#39;display(&#39;0&#39;)&#39; /&gt; | | . What did we notice in the code? . Functions and variables are defined to avoide repeating code | stands for table data x&lt;/li&gt; stands for table row&lt;/li&gt; is a container for HTML elements, and usually defines a second of the document&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; | . | | | .",
            "url": "https://sanikasha.github.io/superFastPages/week%205/2022/09/26/JSCalc.html",
            "relUrl": "/week%205/2022/09/26/JSCalc.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "SSJN Project Purpose",
            "content": "SSJN Group Project . Program Purpose . To help users discover new types of music, artists, and songs. To help users diversify their music listening experience. . Program Function . To match users with a list of songs to listen to depending on their current emotion. . How it will Work . Users enter their current emotion into a text entry box | The program outputs a list of songs that match their current emotion, with spotify links embedded, so the users can explore new music! | Spotify x SSJN! . . xxx . . Roles . Scrum Master: Shreya Sapkal | Frontend Developer: Noor Grewal | Backend Developers: Sanika Shahapurkar &amp; Jiya Savlani | .",
            "url": "https://sanikasha.github.io/superFastPages/markdown/2022/09/25/team-project-purpose.html",
            "relUrl": "/markdown/2022/09/25/team-project-purpose.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "HTML Play",
            "content": ". . Scrum Group (example HTML list) . Sanika | Jiya | Noor | Shreya | . HTML JavaScript Date . Click me to display Date and Time. . . Emoji in HTML . &#128512; .",
            "url": "https://sanikasha.github.io/superFastPages/week%205/2022/09/25/HTMLplay.html",
            "relUrl": "/week%205/2022/09/25/HTMLplay.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "JavaScript Play",
            "content": "Math.round(3.14159); . 3 . Math.floor(Math.random() * 400); . 261 .",
            "url": "https://sanikasha.github.io/superFastPages/week%205/2022/09/24/JSPlay.html",
            "relUrl": "/week%205/2022/09/24/JSPlay.html",
            "date": " • Sep 24, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "JavaScript and HTML Table 1",
            "content": "function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } console.log(&quot;Looking at dynamic nature of types in JavaScript&quot;) logItType(&quot;hello&quot;); logItType(2020); logItType([1, 2, 3]); . function Person(name, ghID, scrum) { this.name = name; this.ghID = ghID; this.scrum = scrum; this.role = &quot;&quot;; } Person.prototype.setRole = function(role) { this.role = role; } Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, scrum: this.scrum, role: this.role}; const json = JSON.stringify(obj); return json; } var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, &quot;none&quot;); logItType(teacher); logItType(teacher.toJSON()); // ok to do this even though role is not yet defined teacher.setRole(&quot;Teacher&quot;); logItType(teacher); logItType(teacher.toJSON()); . object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, scrum: &#39;none&#39;, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;scrum&#34;:&#34;none&#34;,&#34;role&#34;:&#34;&#34;} object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, scrum: &#39;none&#39;, role: &#39;Teacher&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;scrum&#34;:&#34;none&#34;,&#34;role&#34;:&#34;Teacher&#34;} . var students = [ new Person(&quot;Sanika&quot;, &quot;sanikasha&quot;, &quot;Backend&quot;), new Person(&quot;Noor&quot;, &quot;Nope1013&quot;, &quot;Frontend&quot;), new Person(&quot;Shreya&quot;, &quot;rey444&quot;, &quot;Scrum Master&quot;), new Person(&quot;Jiya&quot;, &quot;jiya-sav&quot;, &quot;Backend&quot;) ]; function Classroom(teacher, students){ teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } compsci = new Classroom(teacher, students); logItType(compsci.classroom); logItType(compsci.classroom[0].name); logItType(compsci.json[0]); logItType(JSON.parse(compsci.json[0])); . object ; [ Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, scrum: &#39;none&#39;, role: &#39;Teacher&#39; }, Person { name: &#39;Sanika&#39;, ghID: &#39;sanikasha&#39;, scrum: &#39;Backend&#39;, role: &#39;Student&#39; }, Person { name: &#39;Noor&#39;, ghID: &#39;Nope1013&#39;, scrum: &#39;Frontend&#39;, role: &#39;Student&#39; }, Person { name: &#39;Shreya&#39;, ghID: &#39;rey444&#39;, scrum: &#39;Scrum Master&#39;, role: &#39;Student&#39; }, Person { name: &#39;Jiya&#39;, ghID: &#39;jiya-sav&#39;, scrum: &#39;Backend&#39;, role: &#39;Student&#39; } ] string ; Mr M string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;scrum&#34;:&#34;none&#34;,&#34;role&#34;:&#34;Teacher&#34;} object ; { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, scrum: &#39;none&#39;, role: &#39;Teacher&#39; } . Classroom.prototype._toHtml = function() { var style = ( &quot;display:inline-block;&quot; + &quot;background:green;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em blue;&quot; ); var body = &quot;&quot;; body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;GitHub ID&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Scrum&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; for (var row of compsci.classroom) { body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.ghID + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.scrum + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;tr&gt;&quot;; } return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; $$.html(compsci._toHtml()); . NameGitHub IDScrumRole . Mr M | jm1021 | none | Teacher | Sanika | sanikasha | Backend | Student | Noor | Nope1013 | Frontend | Student | Shreya | rey444 | Scrum Master | Student | Jiya | jiya-sav | Backend | Student | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://sanikasha.github.io/superFastPages/week%205/2022/09/21/JS-1.html",
            "relUrl": "/week%205/2022/09/21/JS-1.html",
            "date": " • Sep 21, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Agile Methodology",
            "content": "Our group is committed to being productive and using agile methodology to our advantage! . .",
            "url": "https://sanikasha.github.io/superFastPages/week%205/2022/09/20/Agile-Methodology.html",
            "relUrl": "/week%205/2022/09/20/Agile-Methodology.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "App Lab Quiz",
            "content": "Plan: . Quiz about Madagascar the Movie, that eventually turns into a Computer Science Quiz. . Begins on the Start page with a button to lead to the next page. Music plays in the background. . | Another beginning page (with reference to the movie) . | First question “Who does Mort worship?”, give 4 options . | Each option is clickable, and will lead to “correct” or “incorrect” answer screen . | Second question “What animal tries to eat Mort?”, give 4 options . | Each option is clickable, and will lead to “correct” or “incorrect” answer screen . | Third question “Mort was the first lemur the main characters encountered. True/False” . | Each option is clickable, and will lead to “correct” or “incorrect” answer screen . | Quiz is hacked! Computer science quiz begins. . | Fourth question “Dictionaries: a way of grouping data into key-value relationships. True/False” . | Each option is clickable, and will lead to “correct” or “incorrect” answer screen . | Fifth question “What is the most productive percentage that off-topic conversation should be in APCSP?”, give 4 options . | Each option is clickable, and will lead to “correct” or “incorrect” answer screen . | Finish screen, with score . | Goals: . Create a quiz that starts out Madagascar themed, then changes into a Computer Science quiz. . | Become more comfortable to Applab . | Introduction to javascript language . | . Successes: . Were able to create personalized screens . | Comfortable with onEvent, console.log, and setScreen . | Were able to manually direct quiz to “correct” or “incorrect” page, when user clicked answer . | . Growth Opportunities: . Was not able to make if/then functions work, and therefore had to write many lines of repeating code . | Learnings: . | setScreen(“x”) directs the computer to the next screen, while console.log carries out the action . | Seeing blocks makes it easier to visual the code when there are so many lines, however seeing text allows you to more . | . Code: https://studio.code.org/projects/applab/jobPzrGa9MM3Zjo8yszP2kpOEaAydzsAJrpaanuIILc . setScreen(“welcometomadigascar”); . playSound(“https://ia902701.us.archive.org/24/items/MadagascarILikeToMoveIt/LetsMovingOsa_64kb.mp3”, false); . onEvent(“next1”, “click”, function( ) { . console.log(“next1 Clicked”); . setScreen(“moveit”); . }); . onEvent(“moveitbutton”, “click”, function( ) { . console.log(“moveitbutton Clicked”); . setScreen(“question1”); . }); . onEvent(“image3”, “click”, function( ) { . console.log(“image3 Clicked”); . setScreen(“correct1”); . }); . onEvent(“image4”, “click”, function( ) { . console.log(“image4 Clicked”); . setScreen(“incorrect1”); . }); . onEvent(“image2”, “click”, function( ) { . console.log(“image2 Clicked”); . setScreen(“incorrect1”); . }); . onEvent(“image5”, “click”, function( ) { . console.log(“image5 Clicked”); . setScreen(“incorrect1”); . }); . onEvent(“next8”, “click”, function( ) { . console.log(“next8 Clicked”); . setScreen(“question2”); . }); . onEvent(“next2”, “click”, function( ) { . console.log(“next2 Clicked”); . setScreen(“question2”); . }); . onEvent(“image6”, “click”, function( ) { . console.log(“image6 Clicked”); . setScreen(“incorrect2”); . }); . onEvent(“image7”, “click”, function( ) { . console.log(“image7 Clicked”); . setScreen(“correct2”); . }); . onEvent(“image8”, “click”, function( ) { . console.log(“image8 Clicked”); . setScreen(“incorrect2”); . }); . onEvent(“image9”, “click”, function( ) { . console.log(“image9 Clicked”); . setScreen(“incorrect2”); . }); . onEvent(“image10”, “click”, function( ) { . console.log(“image10 Clicked”); . setScreen(“incorrect2”); . }); . onEvent(“next9”, “click”, function( ) { . console.log(“next9 Clicked”); . setScreen(“question3”); . }); . onEvent(“next3”, “click”, function( ) { . console.log(“next3 Clicked”); . setScreen(“question3”); . }); . onEvent(“true1”, “click”, function( ) { . console.log(“true1 Clicked”); . setScreen(“correct3”); . }); . onEvent(“false1”, “click”, function( ) { . console.log(“false1 Clicked”); . setScreen(“incorrect3”); . }); . onEvent(“next10”, “click”, function( ) { . console.log(“next10 Clicked”); . setScreen(“question4”); . }); . onEvent(“next4”, “click”, function( ) { . console.log(“next4 Clicked”); . setScreen(“question4”); . }); . onEvent(“next5”, “click”, function( ) { . console.log(“next5 Clicked”); . setScreen(“question5”); . }); . onEvent(“true2”, “click”, function( ) { . console.log(“true2 Clicked”); . setScreen(“correct4”); . }); . onEvent(“false2”, “click”, function( ) { . console.log(“false2 Clicked”); . setScreen(“incorrect4”); . }); . onEvent(“next11”, “click”, function( ) { . console.log(“next11 Clicked”); . setScreen(“question6”); . }); . onEvent(“next6”, “click”, function( ) { . console.log(“next6 Clicked”); . setScreen(“question6”); . }); . onEvent(“choice4”, “click”, function( ) { . console.log(“choice4 Clicked”); . setScreen(“correct5”); . }); . onEvent(“choice1”, “click”, function( ) { . console.log(“choice1 Clicked”); . setScreen(“incorrect5”); . }); . onEvent(“choice2”, “click”, function( ) { . console.log(“choice2 Clicked”); . setScreen(“incorrect5”); . }); . onEvent(“choice3”, “click”, function( ) { . console.log(“choice3 Clicked”); . setScreen(“incorrect5”); . }); . onEvent(“next12”, “click”, function( ) { . console.log(“next12 Clicked”); . setScreen(“finishscreen”); . }); . onEvent(“next7”, “click”, function( ) { . console.log(“next7 Clicked”); . setScreen(“finishscreen”); . playSound(“sound://category_female_voiceover/shout_congratulations_female.mp3”, false); . }); .",
            "url": "https://sanikasha.github.io/superFastPages/2022/09/12/App-Lab-Quiz.html",
            "relUrl": "/2022/09/12/App-Lab-Quiz.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Scrum Board",
            "content": "Ideas for Performance Task: . Guess that song | Match the song to the artist | Finish the lyric | . Functions we want to include / What we need to learn: . Type-in answer | Error message | If/else to avoid having to repeat code for correct/incorrect answers | Score provided at end | Music in the background | . Rubric Row To do Doing Done Notes . 1, Program Purpose and Function | x | x | x |   | . 2, Data Abstraction | x | x | x |   | . 3, Managing Complexity | x | x | x |   | . 4, Procedural Abstraction | x | x | x |   | . 5, Algorithm Implementation | x | x | x |   | . 6, Testing | x | x | x |   | .",
            "url": "https://sanikasha.github.io/superFastPages/create%20performance%20task/2022/09/10/Scrum-Board.html",
            "relUrl": "/create%20performance%20task/2022/09/10/Scrum-Board.html",
            "date": " • Sep 10, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Week 2 Quiz Using Dictionaries",
            "content": "q1 = &quot;&quot;&quot;Which of the following is a type of variable? (Select all that applyx) a. String b. Integer c. Float d. Number&quot;&quot;&quot; q2 = &quot;&quot;&quot;What is the purpose of lists and dictionaries? (Select all that apply) a. Transfer information b. Convert information c. Throw away information d. Collect information&quot;&quot;&quot; q3 = &quot;&quot;&quot;Which of the following apply to lists of dictionaries? (Select all that apply) a. They are a collection of many similar data patterns b. The output looks similar to Ruby (coding language) output c. The output looks similar to JavaScript Object Notation (coding language) output d. A &#39;list&#39; data type has the method &#39;.append(expression)&#39;&quot;&quot;&quot; q4 = &quot;&quot;&quot;In which file are you able to change the the me of your fastpage? (Select all that apply) a. _notebooks b. search.html c. _config.yml d. tags.html&quot;&quot;&quot; questions = {q1:&quot;a, b, c&quot;, q2:&quot;d&quot;, q3:&quot;a, c, d&quot;, q4:&quot;c&quot;} print(&quot;Hello, welcome to the APCSP Week 2 review!&quot;) score=0 for i in questions: print(i) ans = input(&quot;enter your answer (x, x, ...)&quot;) if ans==questions[i]: print(&quot;correct&quot;) score = score+1 else: print(&quot;incorrect&quot;) score = score-1 print(&quot;Your score is:&quot;, score, &quot;/ 4&quot;) . Hello, welcome to the APCSP Week 2 review! Which of the following is a type of variable? (Select all that apply) a. String b. Integer c. Float d. Number correct What is the purpose of lists and dictionaries? (Select all that apply) a. Transfer information b. Convert information c. Throw away information d. Collect information incorrect Which of the following apply to lists of dictionaries? (Select all that apply) a. They are a collection of many similar data patterns b. The output looks similar to Ruby (coding language) output c. The output looks similar to JavaScript Object Notation (coding language) output d. A &#39;list&#39; data type has the method &#39;.append(expression)&#39; correct In which file are you able to change the the me of your fastpage? (Select all that apply) a. _notebooks b. search.html c. _config.yml d. tags.html correct Your score is: 2 / 4 .",
            "url": "https://sanikasha.github.io/superFastPages/week%202/2022/09/01/Dictionary-Quiz.html",
            "relUrl": "/week%202/2022/09/01/Dictionary-Quiz.html",
            "date": " • Sep 1, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Temporarily Changing Theme of Fastpage",
            "content": ". . .",
            "url": "https://sanikasha.github.io/superFastPages/week%202/2022/08/30/Theme.html",
            "relUrl": "/week%202/2022/08/30/Theme.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Sanika's Lists and Dictionaries",
            "content": "InfoDb = [] # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortenson&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Zodiac Sign&quot;: &quot;Scorpio&quot;, &quot;Most Famous Songs&quot;: [&quot;Code Code Code&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Taylor&quot;, &quot;LastName&quot;: &quot;Swift&quot;, &quot;DOB&quot;: &quot;December 13&quot;, &quot;Zodiac Sign&quot;: &quot;Sagittarius&quot;, &quot;Most Famous Songs&quot;: [&quot;Love Story&quot;, &quot;Bad Blood&quot;, &quot;You Belong With Me&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Harry&quot;, &quot;LastName&quot;: &quot;Styles&quot;, &quot;DOB&quot;: &quot;February 1&quot;, &quot;Zodiac Sign&quot;: &quot;Aquarius&quot;, &quot;Most Famous Songs&quot;: [&quot;Sign of the Times&quot;, &quot;Golden&quot;, &quot;Falling&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Noor&quot;, &quot;LastName&quot;: &quot;Grewal&quot;, &quot;DOB&quot;: &quot;October 27&quot;, &quot;Zodiac Sign&quot;: &quot;Scorpio&quot;, &quot;Most Famous Songs&quot;: [&quot;Wasting Love - Iron Maiden&quot;, &quot;Tear - Smashing Pumpkins&quot;, &quot;Everlong - Foo Fighters&quot;] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;John&#39;, &#39;LastName&#39;: &#39;Mortenson&#39;, &#39;DOB&#39;: &#39;October 21&#39;, &#39;Zodiac Sign&#39;: &#39;Scorpio&#39;, &#39;Most Famous Songs&#39;: [&#39;Code Code Code&#39;]}, {&#39;FirstName&#39;: &#39;Taylor&#39;, &#39;LastName&#39;: &#39;Swift&#39;, &#39;DOB&#39;: &#39;December 13&#39;, &#39;Zodiac Sign&#39;: &#39;Sagittarius&#39;, &#39;Most Famous Songs&#39;: [&#39;Love Story&#39;, &#39;Bad Blood&#39;, &#39;You Belong With Me&#39;]}, {&#39;FirstName&#39;: &#39;Harry&#39;, &#39;LastName&#39;: &#39;Styles&#39;, &#39;DOB&#39;: &#39;February 1&#39;, &#39;Zodiac Sign&#39;: &#39;Aquarius&#39;, &#39;Most Famous Songs&#39;: [&#39;Sign of the Times&#39;, &#39;Golden&#39;, &#39;Falling&#39;]}, {&#39;FirstName&#39;: &#39;Noor&#39;, &#39;LastName&#39;: &#39;Grewal&#39;, &#39;DOB&#39;: &#39;October 27&#39;, &#39;Zodiac Sign&#39;: &#39;Scorpio&#39;, &#39;Most Famous Songs&#39;: [&#39;Wasting Love - Iron Maiden&#39;, &#39;Tear - Smashing Pumpkins&#39;, &#39;Everlong - Foo Fighters&#39;]}] . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Birthday:&quot;, d_rec[&quot;DOB&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Zodiac Sign:&quot;, d_rec[&quot;Zodiac Sign&quot;]) print(&quot; t&quot;, &quot;Famous Songs: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Most Famous Songs&quot;])) print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output John Mortenson Birthday: October 21 Zodiac Sign: Scorpio Famous Songs: Code Code Code Taylor Swift Birthday: December 13 Zodiac Sign: Sagittarius Famous Songs: Love Story, Bad Blood, You Belong With Me Harry Styles Birthday: February 1 Zodiac Sign: Aquarius Famous Songs: Sign of the Times, Golden, Falling Noor Grewal Birthday: October 27 Zodiac Sign: Scorpio Famous Songs: Wasting Love - Iron Maiden, Tear - Smashing Pumpkins, Everlong - Foo Fighters . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output John Mortenson Birthday: October 21 Zodiac Sign: Scorpio Famous Songs: Code Code Code Taylor Swift Birthday: December 13 Zodiac Sign: Sagittarius Famous Songs: Love Story, Bad Blood, You Belong With Me Harry Styles Birthday: February 1 Zodiac Sign: Aquarius Famous Songs: Sign of the Times, Golden, Falling Noor Grewal Birthday: October 27 Zodiac Sign: Scorpio Famous Songs: Wasting Love - Iron Maiden, Tear - Smashing Pumpkins, Everlong - Foo Fighters . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output John Mortenson Birthday: October 21 Zodiac Sign: Scorpio Famous Songs: Code Code Code Taylor Swift Birthday: December 13 Zodiac Sign: Sagittarius Famous Songs: Love Story, Bad Blood, You Belong With Me Harry Styles Birthday: February 1 Zodiac Sign: Aquarius Famous Songs: Sign of the Times, Golden, Falling Noor Grewal Birthday: October 27 Zodiac Sign: Scorpio Famous Songs: Wasting Love - Iron Maiden, Tear - Smashing Pumpkins, Everlong - Foo Fighters . Hacks . Add a couple of records to the InfoDb (Finished) | Try to do a for loop with an index | Pair Share code somethings creative or unique, with loops and data. Hints... Would it be possible to output data in a reverse order? | Are there other methods that can be performed on lists? | Could you create new or add to dictionary data set? Could you do it with input? | Make a quiz that stores in a List of Dictionaries. | . | .",
            "url": "https://sanikasha.github.io/superFastPages/week%202/2022/08/30/Lists-and-Dictionaries.html",
            "relUrl": "/week%202/2022/08/30/Lists-and-Dictionaries.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Sanika's Lists and Dictionaries Reversed",
            "content": "InfoDb = [] # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortenson&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Zodiac Sign&quot;: &quot;Scorpio&quot;, &quot;Most Famous Songs&quot;: [&quot;Code Code Code&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Taylor&quot;, &quot;LastName&quot;: &quot;Swift&quot;, &quot;DOB&quot;: &quot;December 13&quot;, &quot;Zodiac Sign&quot;: &quot;Sagittarius&quot;, &quot;Most Famous Songs&quot;: [&quot;Love Story&quot;, &quot;Bad Blood&quot;, &quot;You Belong With Me&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Harry&quot;, &quot;LastName&quot;: &quot;Styles&quot;, &quot;DOB&quot;: &quot;February 1&quot;, &quot;Zodiac Sign&quot;: &quot;Aquarius&quot;, &quot;Most Famous Songs&quot;: [&quot;Sign of the Times&quot;, &quot;Golden&quot;, &quot;Falling&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Noor&quot;, &quot;LastName&quot;: &quot;Grewal&quot;, &quot;DOB&quot;: &quot;October 27&quot;, &quot;Zodiac Sign&quot;: &quot;Scorpio&quot;, &quot;Most Famous Songs&quot;: [&quot;Wasting Love - Iron Maiden&quot;, &quot;Tear - Smashing Pumpkins&quot;, &quot;Everlong - Foo Fighters&quot;] }) InfoDb = InfoDb[::-1] print((InfoDb)) . [{&#39;FirstName&#39;: &#39;Noor&#39;, &#39;LastName&#39;: &#39;Grewal&#39;, &#39;DOB&#39;: &#39;October 27&#39;, &#39;Zodiac Sign&#39;: &#39;Scorpio&#39;, &#39;Most Famous Songs&#39;: [&#39;Wasting Love - Iron Maiden&#39;, &#39;Tear - Smashing Pumpkins&#39;, &#39;Everlong - Foo Fighters&#39;]}, {&#39;FirstName&#39;: &#39;Harry&#39;, &#39;LastName&#39;: &#39;Styles&#39;, &#39;DOB&#39;: &#39;February 1&#39;, &#39;Zodiac Sign&#39;: &#39;Aquarius&#39;, &#39;Most Famous Songs&#39;: [&#39;Sign of the Times&#39;, &#39;Golden&#39;, &#39;Falling&#39;]}, {&#39;FirstName&#39;: &#39;Taylor&#39;, &#39;LastName&#39;: &#39;Swift&#39;, &#39;DOB&#39;: &#39;December 13&#39;, &#39;Zodiac Sign&#39;: &#39;Sagittarius&#39;, &#39;Most Famous Songs&#39;: [&#39;Love Story&#39;, &#39;Bad Blood&#39;, &#39;You Belong With Me&#39;]}, {&#39;FirstName&#39;: &#39;John&#39;, &#39;LastName&#39;: &#39;Mortenson&#39;, &#39;DOB&#39;: &#39;October 21&#39;, &#39;Zodiac Sign&#39;: &#39;Scorpio&#39;, &#39;Most Famous Songs&#39;: [&#39;Code Code Code&#39;]}] . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Birthday:&quot;, d_rec[&quot;DOB&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Zodiac Sign:&quot;, d_rec[&quot;Zodiac Sign&quot;]) print(&quot; t&quot;, &quot;Famous Songs: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Most Famous Songs&quot;])) # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Noor Grewal Birthday: October 27 Zodiac Sign: Scorpio Famous Songs: Wasting Love - Iron Maiden, Tear - Smashing Pumpkins, Everlong - Foo Fighters Harry Styles Birthday: February 1 Zodiac Sign: Aquarius Famous Songs: Sign of the Times, Golden, Falling Taylor Swift Birthday: December 13 Zodiac Sign: Sagittarius Famous Songs: Love Story, Bad Blood, You Belong With Me John Mortenson Birthday: October 21 Zodiac Sign: Scorpio Famous Songs: Code Code Code . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output Noor Grewal Birthday: October 27 Zodiac Sign: Scorpio Famous Songs: Wasting Love - Iron Maiden, Tear - Smashing Pumpkins, Everlong - Foo Fighters Harry Styles Birthday: February 1 Zodiac Sign: Aquarius Famous Songs: Sign of the Times, Golden, Falling Taylor Swift Birthday: December 13 Zodiac Sign: Sagittarius Famous Songs: Love Story, Bad Blood, You Belong With Me John Mortenson Birthday: October 21 Zodiac Sign: Scorpio Famous Songs: Code Code Code .",
            "url": "https://sanikasha.github.io/superFastPages/week%202/2022/08/30/Lists-and-Dictionaries-Reverse.html",
            "relUrl": "/week%202/2022/08/30/Lists-and-Dictionaries-Reverse.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Declaration Of Independance Notes",
            "content": "Declaration of Independence: . June 11, 1776: Continental Congress appoints committee to write DOI, includes Thomas Jefferson . July 4, 1776: DOI adopted by Congress . Thomas Jefferson: . Main author of DOI . | Congress only accepted the DOI after the cut portion attacking slavery . | . Enlightenment Influence: . Jefferson used the ideas of John Locke . Natural rights (life, liberty, property) . | Social Contract . | Right to rebel . | . | . Purpose: To show why the colonies were revolting against Britain and declaring their independence. . 4 parts of DOI: . Preamble . | Declaration of Natural Rights . | List of Grievances . | Resolution of Independence . | The Signers: . John Hancock first to sign (largely so King George could see it from England) . | 56 signers from 13 colonies . | Signing it was considered treason and punishable by death . | . Landmark: . First time group of revolutionaries explained why they had a right to change their government . | Ideas of the DOI influenced the French Revolution and revolutions in South America . | . Question: Were there female revolutionaries working behind the scenes? Is it the question of if there were, or if they were given credit or recognition? .",
            "url": "https://sanikasha.github.io/superFastPages/2022/08/29/Declaration-of-Independance-Notes.html",
            "relUrl": "/2022/08/29/Declaration-of-Independance-Notes.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Fun Calculator",
            "content": "# Addition def add(x, y): return x + y # Subtraction def subtract(x, y): return x - y # Multiplication def multiply(x, y): return x * y # Division def divide(x, y): return x / y print(&quot;Select operation and calculate away!&quot;) print(&quot;1.Add to your hearts desire&quot;) print(&quot;2.Subtract from the sadness in your life&quot;) print(&quot;3.Multiply the amount of smiles you cause&quot;) print(&quot;4.Divide, just like slices in a pie!&quot;) while True: # take input from the user choice = input(&quot;Enter fun operation (1/2/3/4): &quot;) # check if choice is one of the four options if choice in (&#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;): num1 = float(input(&quot;Enter first number: &quot;)) num2 = float(input(&quot;Enter second number: &quot;)) if choice == &#39;1&#39;: print(num1, &quot;+&quot;, num2, &quot;=&quot;, add(num1, num2)) elif choice == &#39;2&#39;: print(num1, &quot;-&quot;, num2, &quot;=&quot;, subtract(num1, num2)) elif choice == &#39;3&#39;: print(num1, &quot;*&quot;, num2, &quot;=&quot;, multiply(num1, num2)) elif choice == &#39;4&#39;: print(num1, &quot;/&quot;, num2, &quot;=&quot;, divide(num1, num2)) next_calculation = input(&quot;Let&#39;s do next exciting calculation? (yes/no): &quot;) if next_calculation == &quot;no&quot;: break else: print(&quot;Invalid Input&quot;) . Select operation and calculate away! 1.Add to your hearts desire 2.Subtract from the sadness in your life 3.Multiply the amount of smiles you cause 4.Divide, just like slices in a pie! 4.0 * 8.0 = 32.0 .",
            "url": "https://sanikasha.github.io/superFastPages/week%202/2022/08/29/Calculator.html",
            "relUrl": "/week%202/2022/08/29/Calculator.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Python Quiz",
            "content": "import getpass, sys def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 3 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_and_answer(&quot;Are you ready to take a test?&quot;) rsp = question_with_response(&quot;What is it called to group a sequence of commands?&quot;) if rsp == &quot;procedural abstraction&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;A string literal like &#39;Hello, World&#39; is referred to as...&quot;) if rsp == &quot;static text&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What is Mr. Mortenson&#39;s famous catch phrase?&quot;) if rsp == &quot;code code code&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) .",
            "url": "https://sanikasha.github.io/superFastPages/week%201/2022/08/26/Python-Quiz.html",
            "relUrl": "/week%201/2022/08/26/Python-Quiz.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Installation Checks",
            "content": "Python Checks . python --version python2 --version . Python 3.9.12 Python 2.7.18 . Conda Packages . conda list . # packages in environment at /Users/johnmortensen/opt/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39hecd8cb5_1 aiohttp 3.8.1 py39hca72f7f_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39hecd8cb5_0 anaconda-navigator 2.2.0 py39hecd8cb5_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39hecd8cb5_0 appdirs 1.4.4 pyhd3eb1b0_0 applaunchservices 0.2.1 pyhd3eb1b0_0 appnope 0.1.2 py39hecd8cb5_1001 appscript 1.1.2 py39h9ed2024_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39hca72f7f_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39hecd8cb5_0 astropy 5.0.4 py39h67323c0_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39h9ed2024_0 beautifulsoup4 4.11.1 py39hecd8cb5_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39hca72f7f_0 bkcharts 0.2 py39hecd8cb5_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h2842e9f_0 bokeh 2.4.2 py39hecd8cb5_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39h67323c0_0 brotli 1.0.9 hb1e8313_2 brotlipy 0.7.0 py39h9ed2024_1003 brunsli 0.1 h23ab428_0 bzip2 1.0.8 h1de35cc_0 c-ares 1.18.1 hca72f7f_0 ca-certificates 2022.3.29 hecd8cb5_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39hecd8cb5_2 cffi 1.15.0 py39hc55c11b_1 cfitsio 3.470 hee0f690_6 chardet 4.0.0 py39hecd8cb5_1003 charls 2.2.0 h23ab428_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39hecd8cb5_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39hecd8cb5_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.13.0 py39hecd8cb5_0 conda-build 3.21.8 py39hecd8cb5_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39hca72f7f_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39h2fd3fbb_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 hca72f7f_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39he9d5cce_0 cytoolz 0.11.0 py39h9ed2024_0 daal4py 2021.5.0 py39h24a4e90_0 dal 2021.5.0 hecd8cb5_782 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39hecd8cb5_1 debugpy 1.5.1 py39he9d5cce_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39hecd8cb5_1 entrypoints 0.4 py39hecd8cb5_0 et_xmlfile 1.1.0 py39hecd8cb5_0 executing 0.8.3 pyhd3eb1b0_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 hd8bbffd_0 frozenlist 1.2.0 py39hca72f7f_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39hecd8cb5_1 gensim 4.1.2 py39he9d5cce_0 giflib 5.2.1 haf1e3a3_0 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h23ab428_2 gmpy2 2.1.2 py39hd5de756_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h9ed2024_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39hecd8cb5_0 greenlet 1.1.1 py39h23ab428_0 grpcio 1.42.0 py39ha29bfda_0 h5py 3.6.0 py39h4a1dd59_0 hdf5 1.10.6 hdbbcd12_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 h0a44026_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39ha952a84_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39hecd8cb5_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39hecd8cb5_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 hecd8cb5_3538 interchange 2021.0.4 pypi_0 pypi intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39hecd8cb5_0 ipython 8.2.0 py39hecd8cb5_0 ipython-cypher 0.2.6 pypi_0 pypi ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39hecd8cb5_1 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e hca72f7f_0 jq 1.6 h9ed2024_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39hecd8cb5_0 jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 haf1e3a3_2 keyring 23.4.0 py39hecd8cb5_0 kiwisolver 1.3.2 py39he9d5cce_0 krb5 1.19.2 hcd88c3b_0 lazy-object-proxy 1.6.0 py39h9ed2024_0 lcms2 2.12 hf1fd2bf_0 lerc 3.0 he9d5cce_0 libaec 1.0.4 hb1e8313_1 libarchive 3.4.2 haa3ed63_0 libcrc32c 1.1.1 hb1e8313_2 libcurl 7.82.0 h6dfd666_0 libcxx 12.0.0 h2f01273_0 libdeflate 1.8 h9ed2024_5 libedit 3.1.20210910 hca72f7f_0 libev 4.33 h9ed2024_1 libffi 3.3 hb1e8313_2 libgfortran 3.0.1 h93005f0_2 libiconv 1.16 hca72f7f_2 libidn2 2.3.2 h9ed2024_0 liblief 0.11.5 he9d5cce_1 libllvm11 11.1.0 h46f1229_1 libnghttp2 1.46.0 ha29bfda_0 libpng 1.6.37 ha441bb4_0 libprotobuf 3.19.1 h8346a28_0 libsodium 1.0.18 h1de35cc_0 libspatialindex 1.9.3 h23ab428_0 libssh2 1.10.0 h0a4fc7d_0 libtiff 4.2.0 h87d7836_0 libunistring 0.9.10 h9ed2024_0 libwebp 1.2.2 h56c3ce4_0 libwebp-base 1.2.2 hca72f7f_0 libxml2 2.9.12 hcdb78fc_0 libxslt 1.1.34 h83b36ba_0 libzopfli 1.0.3 hb1e8313_0 llvm-openmp 12.0.0 h0dcd299_1 llvmlite 0.38.0 py39h8346a28_0 locket 0.2.1 py39hecd8cb5_2 lxml 4.8.0 py39h65b224f_0 lz4-c 1.9.3 h23ab428_1 lzo 2.10 haf1e3a3_2 markdown 3.3.4 py39hecd8cb5_0 markupsafe 2.0.1 py39h9ed2024_0 matplotlib 3.5.1 py39hecd8cb5_1 matplotlib-base 3.5.1 py39hfb0c5b7_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39hecd8cb5_1 mistune 0.8.4 py39h9ed2024_1000 mkl 2021.4.0 hecd8cb5_637 mkl-service 2.4.0 py39h9ed2024_0 mkl_fft 1.3.1 py39h4ab4a9b_0 mkl_random 1.2.2 py39hb2f4e1b_0 mock 4.0.3 pyhd3eb1b0_0 monotonic 1.6 pypi_0 pypi mpc 1.1.0 h6ef4df4_1 mpfr 4.0.2 h9066e36_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39hecd8cb5_0 msgpack-python 1.0.2 py39hf7b0b51_1 multidict 5.2.0 py39hca72f7f_2 multipledispatch 0.6.0 py39hecd8cb5_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39hecd8cb5_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39hecd8cb5_0 nbconvert 6.4.4 py39hecd8cb5_0 nbformat 5.3.0 py39hecd8cb5_0 ncurses 6.3 hca72f7f_2 neo4jrestclient 2.1.1 pypi_0 pypi neo4jupyter 0.2.0 pypi_0 pypi nest-asyncio 1.5.5 py39hecd8cb5_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 10.13.0 h0a44026_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39hecd8cb5_0 numba 0.55.1 py39hae1ba45_0 numexpr 2.8.1 py39h2e5f0a9_0 numpy 1.21.5 py39h2e5f0a9_1 numpy-base 1.21.5 py39h3b1a694_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h9ed2024_0 openjpeg 2.4.0 h66ea3da_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n hca72f7f_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39he9d5cce_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39hecd8cb5_0 pansi 2020.7.3 pypi_0 pypi param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39hecd8cb5_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 pathspec 0.7.0 py_0 patsy 0.5.2 py39hecd8cb5_1 pep8 1.7.1 py39hecd8cb5_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39hde71d04_0 pip 21.2.4 py39hecd8cb5_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39hecd8cb5_1 poyo 0.5.0 pyhd3eb1b0_0 prettytable 3.3.0 pypi_0 pypi prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39he9d5cce_0 psutil 5.8.0 py39h9ed2024_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39he9d5cce_1 py2neo 2021.2.3 pypi_0 pypi pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h9ed2024_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39hecd8cb5_0 pycurl 7.44.1 py39hbcfaee0_1 pydispatcher 2.0.5 py39hecd8cb5_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h9ed2024_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39hecd8cb5_0 pylint 2.9.6 py39hecd8cb5_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39he9d5cce_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h23ab428_6 pyrsistent 0.18.0 py39hca72f7f_0 pysocks 1.7.1 py39hecd8cb5_0 pytables 3.6.1 py39h648f197_1 pytest 7.1.1 py39hecd8cb5_0 python 3.9.12 hdfd78df_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h23ab428_3 python.app 3 py39hca72f7f_0 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39hca72f7f_0 pyyaml 6.0 py39hca72f7f_1 pyzmq 22.3.0 py39he9d5cce_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h468cd18_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39hecd8cb5_0 readline 8.1.2 hca72f7f_1 regex 2022.3.15 py39hca72f7f_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39hecd8cb5_1 ruamel_yaml 0.15.100 py39h9ed2024_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39hae1ba45_0 scikit-learn 1.0.2 py39hae1ba45_1 scikit-learn-intelex 2021.5.0 py39hecd8cb5_0 scipy 1.7.3 py39h8c7af03_0 scrapy 2.6.1 py39hecd8cb5_0 seaborn 0.11.2 pyhd3eb1b0_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39hecd8cb5_0 sip 4.19.13 py39h23ab428_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 he9d5cce_0 sniffio 1.2.0 py39hecd8cb5_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39hecd8cb5_1 spyder-kernels 2.1.3 py39hecd8cb5_0 sqlalchemy 1.4.32 py39hca72f7f_0 sqlite 3.38.2 h707629a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39hca72f7f_0 sympy 1.10.1 py39hecd8cb5_0 tabulate 0.8.9 py39hecd8cb5_0 tbb 2021.5.0 haf03e11_0 tbb4py 2021.5.0 py39haf03e11_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39hecd8cb5_0 terminado 0.13.1 py39hecd8cb5_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h7bc2e8c_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h9ed2024_0 tqdm 4.64.0 py39hecd8cb5_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39hca72f7f_0 typed-ast 1.4.3 py39h9ed2024_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39he9d5cce_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 haf1e3a3_0 urllib3 1.26.9 py39hecd8cb5_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h999c104_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39hecd8cb5_1 websocket-client 0.58.0 py39hecd8cb5_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h6dfd666_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39hecd8cb5_0 wrapt 1.12.1 py39h9ed2024_1 wurlitzer 3.0.2 py39hecd8cb5_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xlwings 0.24.9 py39hecd8cb5_0 xz 5.2.5 h1de35cc_0 yaml 0.2.5 haf1e3a3_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h9ed2024_0 zeromq 4.3.4 h23ab428_0 zfp 0.5.5 he9d5cce_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h4dc903c_2 zope 1.0 py39hecd8cb5_1 zope.interface 5.4.0 py39h9ed2024_0 zstd 1.4.9 h322a384_0 . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 neo4jupyter 0.2.0 pypi_0 pypi . Jupyter Checks . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: java /Users/johnmortensen/Library/Jupyter/kernels/java javascript /Users/johnmortensen/Library/Jupyter/kernels/javascript python3 /Users/johnmortensen/opt/anaconda3/share/jupyter/kernels/python3 bash /usr/local/share/jupyter/kernels/bash . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . python3 /Users/johnmortensen/opt/anaconda3/share/jupyter/kernels/python3 .",
            "url": "https://sanikasha.github.io/superFastPages/techtalk/bash_checks",
            "relUrl": "/techtalk/bash_checks",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Ethnic Lit Paper",
            "content": "Sanika Shahapurkar . Mrs. Darcey-Hall . Ethnic Literature 2 . 16 February 2022 . Asians Belong Center Stage Too . Having participated in community theatre for the majority of my childhood, I was ecstatic to see South Asian culture on the stage in a touring production of Aladdin. Despite Aladdin showing Arabic culture, I appreciated the similarities it had to Indian culture. As soon as the actors took their bows, I hurried to the side of the theatre excited to meet Jasmine at the stage door. When she came out, I was met with disappointment as she was not of South Asian descent, neither was most of the cast. I had and still have, virtually no stage actresses to look up to as a young Indian woman. Asians are misrepresented and excluded from roles in American theatre, therefore contributing to ignorance about important perspectives and reluctant participation of Asian Americans in the performing arts. . Theatre has utilized the dehumanization and caricatures of marginalized races since its origin in vaudeville. Vaudeville was a popular form of variety entertainment including dancers, magicians, acrobats, and more. As rapid industrialization and innovation lead to higher rates of immigration to the United States, entertainment became yet another opportunity to add to the melting pot of America. Vaudeville in America used various forms of racist practices, including blackface, as mediums of entertainment (Vale). This normalized taking advantage of people of color, and showcased them to the public as comedic exhibitions rather than talented individuals. While interest surrounding vaudeville faded, the attachment to racist ideology persisted throughout live performing arts. As analyzed specifically in the context of Asian-Americans, author Esther Lee in her publication “A History of Asian American Theatre’’ said, “The first relationship American theatre established with Asia and Asianness was founded on exoticism and voyeurism” (Lee, Esther). Aspects of Asian people’s culture were selectively chosen depending on which seemed most “interesting” or “glamorous” to be put on stage. Racism was a significant aspect in the origin of theatre in America, allowing for select ideologies to stay consistent despite overall progress in the arts. . American theatre, although having improved its minority representation, still falls behind in its efforts towards involving Asian-Americans. In the 2015-2016 Broadway season, 36% of casted actors were a part of a marginalized group, yet only 5% were Asian (Fuchs). With this major lack of representation, entertainment is not able to offer an accurate depiction of the real American population. Entertainment is a highly utilized resource, especially for young audiences, to help develop their opinions and consideration for others. Without exposure to a diverse cast, people will be unable to collaborate and integrate with those who have different perspectives than them. In addition to exposure, the theatre industry lacks plays and musicals that provide insight into the Asian-American experience. “It’s taken a long time for African-American and Latino actors to get to a level where roles are being written for them—but right now, for South Asian and Southeast Asian actors, roles are still not being written for us,” says actor Vishaal Reddy says in an interview for Playbill (Clement). There are barely any roles popular amongst the theatre community that portray Asian actors, and when there are, they adhere to harmful stereotypes about the group. Though Miss Saigon is centered around a Japanese woman, it shows her value and identity only concerning her love interest, a white man. She is also oversexualized, which has roots in white men objectifying and fetishizing Asian women rather than viewing them as capable beings. As an Asian woman who has attended many auditions, I have never come across a role designed for an Asian (or South Asian) woman, which has been quite discouraging. Especially because white women are always the ingenue, I felt villainized by every casting director. An artistic team that lacks the diversity showcased in the art can lead to detrimental impacts on the final production. If white cisgender male directors are chosen for a diverse theatrical piece, inevitably, they will not be able to create a fully bias-free and multi-perspective cast and interpretation of the playwrights’ story (Brewer). Diversity in positions of power are necessary for institutional change in the discriminatory practices of theatre in America. . Asian-Americans are discouraged from pursuing careers other than those which are STEM-related due to expectations the United States has for immigrants, including the model minority myth. The ideologies enforced on immigrant parents have often been reflected in their methods of parenting and the priorities set for their children’s life. Engineering and medicine were considered the most respectable careers because they produced the most income. For immigrant parents, financial stability was most valuable because they struggled with it during the immigration process (Lee, Julia). Although there is nothing wrong with entering a STEM field, the problem lies where young Asians don’t feel like they have the freedom to enter a profession they are genuinely passionate about. Additionally, throughout their lives, they are expected to excel academically simply due to preconceived notions about Asians. This immense pressure to live up to expectations has added to the reason there is an inadequate amount of Asians in artistic fields. They are taught that pursuing a STEM field is the only way to achieve success, and that they are failures and under-achievers if they don’t want to. This often translates into internalized oppression, where young-adult Asians reject their cultural identity because of their desire to pursue something that deviates from the stereotype (Lee, Jennifer). The aspirations and future plans of young Asian Americans are unfairly swayed away from the arts, due to both internal and external bias against non-STEM professions. . Asian-American artists have found methods of liberation and resistance to fight for their representation and deserved roles in American theatre. Despite discrimination against Asians in theatre still being prominent, there has been immense progress from vaudeville-type racist entertainment. This progress was led by Asian-Americans in the 1960s, who founded theatres and became playwrights, actors, set designers, and directors. They made their opportunities without assistance from white lead institutions and began to show the importance and beauty of Asian American theatre and artistic expression (“Asian Americans: Theatre”). By demonstrating the possibilities of diverse theatre and showing persistence, they fought their way into theatre, disregarding the bias the industry had against them. These methods paved the way for modern Asian American-led theatre, where people have used plays and musicals as a method of fighting oppression and anti-Asian hate. Ralph Peña, the artistic director for Ma-Yi Theater Company explained, “We tell Asian stories from Asian artists, with Asian agency and centering Asian lives, therefore humanizing Asian lives. That’s our function. And so when we do that, it’s harder to choke somebody on the subway until they’re unconscious” (Tran). Besides the inherent importance of diversity in theatre, theatre is a medium in which progressive ideas and a variety of racial (and other identities) perspectives can be communicated. By seeing someone play a character on stage that communicates their experience and emotions, people can better understand or at least make an effort to understand, when they leave the theatre. In addition to Asian-led theatre companies, National Theatre has taken initiative to implement diversity into their productions. National Theatre is a British theatre organization funded by the Arts Council England and NESTA (National Endowment for Science, Technology and the Arts). They have set goals for diversity and inclusion, and their efforts are visible through their productions, as most productions have a cast consisting of people from various identities. By observing various countries, organizations, and individuals that have implemented lasting improvements, American theatre can use similar methods to spark change in the United States. . Storytelling is an extraordinary way to enlighten and introduce people of all ages and identities to a variety of concepts and perspectives. A study conducted by Ekua Hagan, Jamil Zaki, and Leor Hackel in the Journal of Experimental Social Psychology, found that attending these plays increased empathy for people depicted in them and changed people’s political attitudes about a variety of issues related to the show, such as income inequality (Hagen). Both the audience and the company are advantages when theatre is used as a medium of cultural expression and education. By displaying Asian characters who go through discriminations, microaggressions, and stereotypes, we give a voice to Asian people in the real world. On a smaller, but still significant scale, diversity in theatre helps Asian actors (and theatre technicians) feel appreciated for their entire identity. Pooja Ghai explains her experience in South Asian theatre company Tamasha, as she says, “They were telling stories that encapsulated migrant, colonial and postcolonial experiences and I thought ‘This is why I want to do what I’m doing.’ I’d found a space for telling stories that mattered” (Akbar). It is vital for theatre-goers and people in theatre to push casting directors towards diversity, and leave the way for Asian playwrights, directors, and actors to showcase their talents that have been silenced for so long. Being a South Asian actor in the United States, I have not yet found a space in which I have had access to an abundance of South Asian characters. I look forward to feeling the same joy I felt when I played the Bangladeshi character Zubaida Ula in The Laramie Project, and the amazement of when I saw a South Asian man play a queer Benvolio in National Theatre’s Romeo and Juliet. . Works Consulted . Akbar, Arifa. “Theatre leader Pooja Ghai: ‘I couldn’t sit back and complain about roles I wasn’t getting.’” The Guardian, 12 Jan. 2022, www.theguardian.com/stage/2022/jan/12/theatre-leader-pooja-ghai-i-couldnt-sit-back-and-complain-about-roles-i-wasnt-getting. Accessed 9 Feb. 2022. . “Asian Americans: Theatre.” UXL Multicultural: A Comprehensive Resource on African Americans, Hispanic Americans and Native North Americans, UXL, 2003. Gale in Context: High School, link.gale.com/apps/doc/EJ2107200366/SUIC?u=powa9245 &amp;sid=bookmark-SUIC &amp;xid=dbed5da8. Accessed 7 Feb. 2022. . Brewer, Nicole. “Playwrights of Color, White Directors, and Exposing Racist Policy.” Howlround Theatre Commons, Aug. 2019, howlround.com/playwrights-color-white-directors-and-exposing-racist-policy. Accessed 9 Feb. 2022. . Clement, Olivia. “Why Broadway Needs More South Asian Actors.” Playbill, 1 Oct. 2016, www.playbill.com/article/why-broadway-needs-more-south-asian-actors. Accessed 9 Feb. 2022. . Fuchs, Chris. “Broadway Diversity Improves for All but Asian Americans, Report Finds.” NBC News, 17 Jan. 2018, www.nbcnews.com/news/asian-america/broadway-diversity-improves-all-asian-americans-report-finds-n838351. Accessed 7 Feb. 2022. . Gardner, Lyn. “Diversity is key to creativity – and British theatre’s challenge for 2015.” The Guardian, 6 Jan. 2015, www.theguardian.com/stage/theatreblog/2015/jan/06/diversity-creativity-british-theatre-2015. Accessed 9 Feb. 2022. . Hagan, Ekua. “The Science of Live Theatre.” Psychology Today, 13 Apr. 2021, www.psychologytoday.com/us/blog/words-matter/202104/the-science-live-theatre. Accessed 9 Feb. 2022. . Lee, Esther Kim. A History of Asian American Theatre. Cambridge, Cambridge UP, 2008. . Lee, Jennifer. “We need more Asian American kids growing up to be artists, not doctors.” The Guardian, 16 Mar. 2014, www.theguardian.com/commentisfree/2014/mar/16/asian-american-jobs-success-myth-arts. Accessed 9 Feb. 2022. . Lee, Julia. “When People of Color Are Discouraged From Going Into the Arts.” The Atlantic, 28 Feb. 2016, www.theatlantic.com/education/archive/2016/02/oscars-so-white-academia-stereotypes/471291/. Accessed 9 Feb. 2022. .",
            "url": "https://sanikasha.github.io/superFastPages/2022/02/16/Ethnic-Lit-Paper.html",
            "relUrl": "/2022/02/16/Ethnic-Lit-Paper.html",
            "date": " • Feb 16, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "My first markdown and more",
            "content": "The link to my Github Insights: https://github.com/sanikasha/superFastPages/pulse . My Fastpages VS Code Project: . .",
            "url": "https://sanikasha.github.io/superFastPages/week%200/2020/08/21/my-first-markdown.html",
            "relUrl": "/week%200/2020/08/21/my-first-markdown.html",
            "date": " • Aug 21, 2020"
        }
        
    
  
    
        ,"post20": {
            "title": "Sanika's Jupyter Notebook 1",
            "content": "print(&quot;Hello from Sanika&quot;) . Hello from Sanika .",
            "url": "https://sanikasha.github.io/superFastPages/week%200/2020/08/21/Hello.html",
            "relUrl": "/week%200/2020/08/21/Hello.html",
            "date": " • Aug 21, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "JavaScript",
          "content": "Personal Usage of JavaScript Kernel : . JavaScript Play | HTML Play | JavaScript Calculator Attempt | . Table : . JavaScript Table | .",
          "url": "https://sanikasha.github.io/superFastPages/javascript/",
          "relUrl": "/javascript/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "Learning Targets",
          "content": "Week Topics Learnings . 1 | Tools Setup | Create Fastpage, Creat first Jupyter notebook, Screen capture of VS Studio | . 2 | Intro Python, Jupyter, Fastpages | Productive Blogging, Jupyter Notebook using Bash, more | . 3 | Data Abstraction | List/Dictionaries Iteration, HTML/Markdown Fragments | . Vocab . Word Pseudocode Python Def/Purpose . Output | DISPLAY(expression) | print(expression, end=” “) | Displays the value of expression, followed by a space. Python defaults to newline, thus the end=” “ | . Input | a ← INPUT() | a = input(prompt) | Accepts a value from the user and returns it to the variable a. | . Assignment | a ← expression | a = expression | Evaluates expression and assigns the result to the variable a. | . Lists |   | [] | a way to group data into ordered sequences | . Dictionaries |   | {} | a way of grouping data into in key-value relationships | . HTML Fragments |   |   | HTML fragments are portions of code used in a greater coding system that enable functionality specific to the current page | .",
          "url": "https://sanikasha.github.io/superFastPages/learningtargets/",
          "relUrl": "/learningtargets/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "About Me",
          "content": "My name is Sanika Shahapurkar, and I am currently a senior in high school! I love playing my guitar, going to concerts, and taking pictures on my film camera. I am in several clubs including the DNHS Anti-racism and Equity Taskforce, Peer Counseling, and Theatre Society. . .",
          "url": "https://sanikasha.github.io/superFastPages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page5": {
          "title": "My Photography",
          "content": "Here are some of my favorite film pictures I have taken! . .",
          "url": "https://sanikasha.github.io/superFastPages/photography/",
          "relUrl": "/photography/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  

  
  

  
      ,"page14": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://sanikasha.github.io/superFastPages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}